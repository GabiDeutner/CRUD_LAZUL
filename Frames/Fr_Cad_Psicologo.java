
package Frames;


import BancoDado.BD_Psicologo;
import Objeto.Objeto_Psicologo;

import BancoDado.BD_Sexo;
import Objeto.Objeto_Sexo;

import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Fr_Cad_Psicologo extends javax.swing.JFrame {

    private BD_Psicologo bd_psicologo     = new BD_Psicologo ();
    private ArrayList<Objeto_Psicologo> ListaPsicologo = new ArrayList();
    private Objeto_Psicologo RegistroPsicologo   = new Objeto_Psicologo ();
    
    private BD_Sexo         bd_sexo            = new BD_Sexo ();
    private ArrayList<Objeto_Sexo> ListaSexo = new ArrayList();
    
     private String Operacao;
    
    public Fr_Cad_Psicologo() {
        initComponents();
        
        try {
            CargaTabela ();
            CargaListaSexo();
            CargaComboBoxSexo ();
            Desabilita ();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro Carga Grid/Combobox \n"+ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        }
        Operacao=""; 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_psicologo = new javax.swing.JTable();
        lb_codigo = new javax.swing.JLabel();
        lb_nome = new javax.swing.JLabel();
        lb_CRP = new javax.swing.JLabel();
        lb_DDD = new javax.swing.JLabel();
        lb_telefone = new javax.swing.JLabel();
        lb_email = new javax.swing.JLabel();
        lb_faculdade = new javax.swing.JLabel();
        lb_dtnascimento = new javax.swing.JLabel();
        lb_CPF = new javax.swing.JLabel();
        lb_RG = new javax.swing.JLabel();
        lb_sexo = new javax.swing.JLabel();
        tf_codigo = new javax.swing.JTextField();
        tf_CRP = new javax.swing.JTextField();
        tf_DDD = new javax.swing.JTextField();
        tf_faculdade = new javax.swing.JTextField();
        tf_dtnascimento = new javax.swing.JTextField();
        tf_nome = new javax.swing.JTextField();
        tf_email = new javax.swing.JTextField();
        tf_telefone = new javax.swing.JTextField();
        tf_RG = new javax.swing.JTextField();
        tf_CPF = new javax.swing.JTextField();
        cb_sexo = new javax.swing.JComboBox();
        bt_limpar = new javax.swing.JButton();
        bt_incluir = new javax.swing.JButton();
        bt_excluir = new javax.swing.JButton();
        bt_alterar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Cadastro Psicólogo");

        tb_psicologo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Nome", "CRP", "DDD", "Faculdade", "Data Nascimento", "Sexo", "email", "Telefone", "RG", "CPF"
            }
        ));
        tb_psicologo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_psicologoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tb_psicologo);

        lb_codigo.setText("Código:");

        lb_nome.setText("Nome:");

        lb_CRP.setText("CRP:");

        lb_DDD.setText("DDD:");

        lb_telefone.setText("Telefone:");

        lb_email.setText("E-mail:");

        lb_faculdade.setText("Faculdade:");

        lb_dtnascimento.setText("Data Nascimento:");

        lb_CPF.setText("CPF:");

        lb_RG.setText("RG:");

        lb_sexo.setText("Sexo:");

        tf_codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_codigoActionPerformed(evt);
            }
        });

        bt_limpar.setText("Limpar");
        bt_limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_limparActionPerformed(evt);
            }
        });

        bt_incluir.setText("Incluir");
        bt_incluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_incluirActionPerformed(evt);
            }
        });

        bt_excluir.setText("Excluir");
        bt_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_excluirActionPerformed(evt);
            }
        });

        bt_alterar.setText("Alterar");
        bt_alterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_alterarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(245, 245, 245))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lb_codigo)
                            .addComponent(lb_CRP)
                            .addComponent(lb_DDD)
                            .addComponent(lb_faculdade)
                            .addComponent(lb_dtnascimento)
                            .addComponent(lb_sexo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tf_CRP)
                            .addComponent(tf_codigo)
                            .addComponent(tf_DDD)
                            .addComponent(tf_faculdade)
                            .addComponent(tf_dtnascimento)
                            .addComponent(cb_sexo, 0, 129, Short.MAX_VALUE))
                        .addGap(64, 64, 64))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bt_limpar)
                        .addGap(75, 75, 75)
                        .addComponent(bt_incluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bt_excluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bt_alterar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lb_telefone)
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tf_telefone, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_nome, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_email, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lb_email)
                            .addComponent(lb_nome))
                        .addGap(166, 166, 166))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lb_RG)
                            .addComponent(lb_CPF))
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tf_RG, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_CPF, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_codigo)
                    .addComponent(lb_nome)
                    .addComponent(tf_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_CRP)
                    .addComponent(lb_email)
                    .addComponent(tf_CRP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_DDD)
                    .addComponent(lb_telefone)
                    .addComponent(tf_DDD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_telefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_faculdade)
                    .addComponent(lb_RG)
                    .addComponent(tf_faculdade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_RG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_dtnascimento)
                    .addComponent(lb_CPF)
                    .addComponent(tf_dtnascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_CPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_sexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb_sexo))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_limpar)
                    .addComponent(bt_incluir)
                    .addComponent(bt_excluir)
                    .addComponent(bt_alterar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void tf_codigoActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void tb_psicologoMouseClicked(java.awt.event.MouseEvent evt) {                                          
        CarregaTabela_TextFileld();
        MontaTela();        

// TODO add your handling code here:
    }                                         

    private void bt_limparActionPerformed(java.awt.event.ActionEvent evt) {                                          
        tf_codigo.setText(null);      
        tf_nome.setText(null);
        tf_CPF.setText(null);
        tf_DDD.setText(null);
        tf_CRP.setText(null);
        tf_RG.setText(null);
        tf_telefone.setText(null);
        tf_dtnascimento.setText(null);
        tf_email.setText(null);
        tf_faculdade.setText(null);
        cb_sexo.setSelectedIndex(-1);
        
// TODO add your handling code here:
    }                                         

    private void bt_incluirActionPerformed(java.awt.event.ActionEvent evt) {                                           
int cd_sexo=0;
      
        
        if(Operacao.equals("Incluir")) 
        {
        
            if(isCamposPreenchidos ()) 
            {

                carregaRegPsicologo_Inclusao ();
                
                if(isCamposValidos()) {
                
                    try {
                        cd_sexo=bd_sexo.busca_abr_Sexo(RegistroPsicologo.getAbr_Sexo());
                        RegistroPsicologo.setCd_SexoPsicologo(cd_sexo);
                       
                        
                        
                    } catch (Exception ex) {
                       JOptionPane.showMessageDialog(null,"Erro ao buscar Sexo\n"+ex.getMessage(),"ERRO BD",JOptionPane.ERROR_MESSAGE);
                    }
                    
                    try {
                    
                        if(bd_psicologo.InserirPsicologo(RegistroPsicologo)) {
                            JOptionPane.showMessageDialog(null,"Psicologo Incluído com Sucesso","MENSAGEM",JOptionPane.INFORMATION_MESSAGE);     
                        } else {
                            JOptionPane.showMessageDialog(null,"Erro ao incluir Psicologo. Erro de Dados","ERRO BD",JOptionPane.ERROR_MESSAGE);     
                        }
                        
                    }  catch (Exception ex) {
                       JOptionPane.showMessageDialog(null,"Erro ao incluir Psicologo\n"+ex.getMessage(),"ERRO BD",JOptionPane.ERROR_MESSAGE);
                    } finally {
                        try {
                            CargaTabela ();
                            CargaListaSexo();
                            
                            CargaComboBoxSexo ();
                            
                            Desabilita ();
                        } catch (Exception ex) {
                            JOptionPane.showMessageDialog(null, "Erro Carga Grid/Combobox \n"+ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
                        }
                        Operacao="";
                        
                    } // finally 
                    
                    
                } else { //  if(isCamposValidos()) {
                   JOptionPane.showMessageDialog(null, "Preencha Corretamente:\n Nome e Faculdade com até 30 Caracteres, Data de Nascimento com 10 Caracteres, email com @ e terminação correta","ERRO",JOptionPane.ERROR_MESSAGE);
                }
                
                
            } else { // if(isCamposPreenchidos ()) {
           
               JOptionPane.showMessageDialog(null, "Preencha todos os campo!","ERRO",JOptionPane.ERROR_MESSAGE);
            }


            
        }else { // if(Operacao.equals("Incluir")) {
            Operacao="Incluir"; 
            Limpar();
            habilitaEdicao ();
        }
// TODO add your handling code here:
    }                                          

    private void bt_excluirActionPerformed(java.awt.event.ActionEvent evt) {                                           

        int resp = JOptionPane.showConfirmDialog(null,"Confirma Exclusão?","Mensagem Exclusão",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
        
        if(resp==0) {
            
            try {
               RegistroPsicologo.setCd_Psicologo(Integer.parseInt(tf_codigo.getText().trim()));
               
               if(bd_psicologo.ExcluirPsicologo(RegistroPsicologo) ) {
                  JOptionPane.showMessageDialog(null, "Psicologo excluído com Sucesso","Mensagem",JOptionPane.INFORMATION_MESSAGE);            
               } else {
                  JOptionPane.showMessageDialog(null, "Erro ao Excluir Psicologo","ERRO BD",JOptionPane.ERROR_MESSAGE);               
               }
               
            } catch (Exception ex) {
               JOptionPane.showMessageDialog(null, "Erro ao Excluir Psicologo"+ex.getMessage(),"ERRO BD",JOptionPane.ERROR_MESSAGE);           
                        
           } finally  {
                Limpar();
                       
                habilitaConsulta();
                try {
                    CargaTabela ();
                } catch (Exception ex) {
                       JOptionPane.showMessageDialog(null, "Erro ao carregar GRID \n"+ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            Desabilita ();
        }

// TODO add your handling code here:
    }                                          

    private void bt_alterarActionPerformed(java.awt.event.ActionEvent evt) {                                           
                                          
     int cd_sexo=0;
      
        
        if(Operacao.equals("A")) 
        {
        
            if(isCamposPreenchidos ()) 
            {

                carregaRegPsicologo ();
                
                if(isCamposValidos()) {
                
                    try {
                        cd_sexo=bd_sexo.busca_abr_Sexo(RegistroPsicologo.getAbr_Sexo());
                        RegistroPsicologo.setCd_SexoPsicologo(cd_sexo);
                       
                        
                        
                    } catch (Exception ex) {
                       JOptionPane.showMessageDialog(null,"Erro ao buscar Sexo\n"+ex.getMessage(),"ERRO BD",JOptionPane.ERROR_MESSAGE);
                    }
                    
                    try {
                    
                        if(bd_psicologo.AlteraPsicologo(RegistroPsicologo)) {
                            JOptionPane.showMessageDialog(null,"Psicologo Alterado com Sucesso","MENSAGEM",JOptionPane.INFORMATION_MESSAGE);     
                        } else {
                            JOptionPane.showMessageDialog(null,"Erro ao Alterar Psicologo. Erro de Dados","ERRO BD",JOptionPane.ERROR_MESSAGE);     
                        }
                        
                    }  catch (Exception ex) {
                       JOptionPane.showMessageDialog(null,"Erro ao Alterar Psicologo\n"+ex.getMessage(),"ERRO BD",JOptionPane.ERROR_MESSAGE);
                    } finally {
                        try {
                            CargaTabela ();
                            CargaListaSexo();
                            CargaComboBoxSexo ();               
                            Desabilita ();
                        } catch (Exception ex) {
                            JOptionPane.showMessageDialog(null, "Erro Carga Grid/Combobox \n"+ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
                        }
                        Operacao="";
                        
                    } // finally 
                    
                    
                } else { //  if(isCamposValidos()) {
                   JOptionPane.showMessageDialog(null, "Preencha Corretamente:\n Nome e Faculdade com até 30 Caracteres, Data de Nascimento com 10 Caracteres, email com @ e terminação correta","ERRO",JOptionPane.ERROR_MESSAGE);
                }
                
                
            } else { // if(isCamposPreenchidos ()) {
           
               JOptionPane.showMessageDialog(null, "Preencha todos os campo!","ERRO",JOptionPane.ERROR_MESSAGE);
            }


            
        }else { // if(Operacao.equals("Incluir")) {
            Operacao="A"; 
            Limpar();
            habilitaEdicao ();
        }                                   
        
// TODO add your handling code here:
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Fr_Cad_Psicologo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Fr_Cad_Psicologo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Fr_Cad_Psicologo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Fr_Cad_Psicologo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Fr_Cad_Psicologo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton bt_alterar;
    private javax.swing.JButton bt_excluir;
    private javax.swing.JButton bt_incluir;
    private javax.swing.JButton bt_limpar;
    private javax.swing.JComboBox cb_sexo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_CPF;
    private javax.swing.JLabel lb_CRP;
    private javax.swing.JLabel lb_DDD;
    private javax.swing.JLabel lb_RG;
    private javax.swing.JLabel lb_codigo;
    private javax.swing.JLabel lb_dtnascimento;
    private javax.swing.JLabel lb_email;
    private javax.swing.JLabel lb_faculdade;
    private javax.swing.JLabel lb_nome;
    private javax.swing.JLabel lb_sexo;
    private javax.swing.JLabel lb_telefone;
    private javax.swing.JTable tb_psicologo;
    private javax.swing.JTextField tf_CPF;
    private javax.swing.JTextField tf_CRP;
    private javax.swing.JTextField tf_DDD;
    private javax.swing.JTextField tf_RG;
    private javax.swing.JTextField tf_codigo;
    private javax.swing.JTextField tf_dtnascimento;
    private javax.swing.JTextField tf_email;
    private javax.swing.JTextField tf_faculdade;
    private javax.swing.JTextField tf_nome;
    private javax.swing.JTextField tf_telefone;
    // End of variables declaration                   

private void Desabilita () {  
        Limpar();
        tf_codigo.setEditable(false);
        tf_nome.setEditable(false);
        tf_CPF.setEditable(false);
        tf_DDD.setEditable(false);
        tf_CRP.setEditable(false);
        tf_RG.setEditable(false);
        tf_telefone.setEditable(false);
        tf_dtnascimento.setEditable(false);
        tf_email.setEditable(false);
        tf_faculdade.setEditable(false);
        cb_sexo.setEditable(false);
        
  }
    
  private void habilitaConsulta () {
        Limpar();
        tf_codigo.setEditable(true);
        tf_nome.setEditable(false);
        tf_CPF.setEditable(false);
        tf_DDD.setEditable(false);
        tf_CRP.setEditable(false);
        tf_RG.setEditable(false);
        tf_telefone.setEditable(false);
        tf_dtnascimento.setEditable(false);
        tf_email.setEditable(false);
        tf_faculdade.setEditable(false);
        cb_sexo.setEditable(false);
    }
    
    private void habilitaEdicao () {
        Limpar();
        tf_codigo.setEditable(false);
        tf_nome.setEditable(true);
        tf_CPF.setEditable(true);
        tf_DDD.setEditable(true);
        tf_CRP.setEditable(true);
        tf_RG.setEditable(true);
        tf_telefone.setEditable(true);
        tf_dtnascimento.setEditable(true);
        tf_email.setEditable(true);
        tf_faculdade.setEditable(true);
        cb_sexo.setEditable(true);
    }

    private void MontaTela() {
     
        tf_nome.setText(RegistroPsicologo.getNm_Psicologo());        
        tf_codigo.setText(String.valueOf(RegistroPsicologo.getCd_Psicologo()));
        tf_CPF.setText(String.valueOf(RegistroPsicologo.getNr_CPFpsicologo()));
        tf_DDD.setText(String.valueOf(RegistroPsicologo.getNr_DDDpsicologo()));
        tf_CRP.setText(String.valueOf(RegistroPsicologo.getNr_CRPpsicologo()));
        tf_RG.setText(String.valueOf(RegistroPsicologo.getNr_RGpsicologo()));
        tf_telefone.setText(String.valueOf(RegistroPsicologo.getNr_Telefonepsicologo()));
        tf_dtnascimento.setText(String.valueOf(RegistroPsicologo.getDt_DataNascimentoPsi()));
        tf_email.setText(String.valueOf(RegistroPsicologo.getDs_emailPsicologo()));
        tf_faculdade.setText(String.valueOf(RegistroPsicologo.getNm_FaculdadePsicologo()));
        cb_sexo.setSelectedItem(RegistroPsicologo.getAbr_Sexo());
    }
    
    
    private void Limpar() {
        tf_codigo.setText(null);      
        tf_nome.setText(null);
        tf_CPF.setText(null);
        tf_DDD.setText(null);
        tf_CRP.setText(null);
        tf_RG.setText(null);
        tf_telefone.setText(null);
        tf_dtnascimento.setText(null);
        tf_email.setText(null);
        tf_faculdade.setText(null);
        cb_sexo.setSelectedIndex(-1);
        
    }
    
    
     private void carregaRegPsicologo_Inclusao () {
        
        
        RegistroPsicologo.setNm_Psicologo(tf_nome.getText().trim());
        RegistroPsicologo.setNr_CPFpsicologo(Integer.parseInt(tf_CPF.getText().trim()));
        RegistroPsicologo.setDt_DataNascimentoPsi(Integer.parseInt(tf_dtnascimento.getText().trim()));
        RegistroPsicologo.setDs_emailPsicologo(tf_email.getText().trim());
        RegistroPsicologo.setNm_FaculdadePsicologo(tf_faculdade.getText().trim());
        RegistroPsicologo.setNr_CRPpsicologo(Integer.parseInt(tf_CRP.getText().trim()));
        RegistroPsicologo.setNr_RGpsicologo(Integer.parseInt(tf_RG.getText().trim()));
        RegistroPsicologo.setNr_DDDpsicologo(Integer.parseInt(tf_DDD.getText().trim()));
        RegistroPsicologo.setNr_Telefonepsicologo(Integer.parseInt(tf_telefone.getText().trim()));
        RegistroPsicologo.setAbr_Sexo(cb_sexo.getSelectedItem().toString());

        
        System.out.println(cb_sexo.getSelectedItem().toString());

        
        
    } 
     
     
    private void carregaRegPsicologo () {
        
        RegistroPsicologo.setNm_Psicologo(tf_nome.getText().trim());
        RegistroPsicologo.setNr_CPFpsicologo(Integer.parseInt(tf_CPF.getText().trim()));
        RegistroPsicologo.setDt_DataNascimentoPsi(Integer.parseInt(tf_dtnascimento.getText().trim()));
        RegistroPsicologo.setDs_emailPsicologo(tf_email.getText().trim());
        RegistroPsicologo.setNm_FaculdadePsicologo(tf_faculdade.getText().trim());
        RegistroPsicologo.setNr_CRPpsicologo(Integer.parseInt(tf_CRP.getText().trim()));
        RegistroPsicologo.setNr_RGpsicologo(Integer.parseInt(tf_RG.getText().trim()));
        RegistroPsicologo.setNr_DDDpsicologo(Integer.parseInt(tf_DDD.getText().trim()));
        RegistroPsicologo.setNr_Telefonepsicologo(Integer.parseInt(tf_telefone.getText().trim()));
        RegistroPsicologo.setAbr_Sexo(cb_sexo.getSelectedItem().toString());
    }
    

    
    
    
    private  boolean isCamposPreenchidos () {
       boolean saida=false;
       
       if((!tf_nome.getText().trim().isEmpty())&&
          (!tf_CPF.getText().trim().isEmpty())&&
          (!tf_dtnascimento.getText().trim().isEmpty())&&
          (!tf_RG.getText().trim().isEmpty())&&
          (!tf_DDD.getText().trim().isEmpty())&&
          (!tf_CRP.getText().trim().isEmpty())&&
          (!tf_faculdade.getText().trim().isEmpty())&&
          (!tf_email.getText().trim().isEmpty())&&
          (!tf_telefone.getText().trim().isEmpty())&&     
          (cb_sexo.getSelectedIndex()!=-1))

       {  
           saida=true;
       }

       
       return saida;
    }
    
    public void CargaTabela () throws Exception {
        try {
            
        
           DefaultTableModel modelo = (DefaultTableModel) tb_psicologo.getModel();
           modelo.setNumRows(0);  
           modelo.setRowCount(0);
           
           for(Objeto_Psicologo registro: bd_psicologo.CarregarListaPsicologo()) {
               modelo.addRow( new Object [] 
                            {
                               registro.getCd_Psicologo(),
                               registro.getNm_Psicologo(),
                               registro.getNr_CRPpsicologo(),
                               registro.getNr_DDDpsicologo(),
                               registro.getNm_FaculdadePsicologo(),
                               registro.getDt_DataNascimentoPsi(),
                               registro.getAbr_Sexo(),
                               registro.getDs_emailPsicologo(),
                               registro.getNr_Telefonepsicologo(),
                               registro.getNr_RGpsicologo(),
                               registro.getNr_CPFpsicologo(),
                            }
                            );
           }
           
        } catch (Exception ex)   {
            JOptionPane.showMessageDialog(null, "Erro ao carregar GRID Psicologo\n"+ex.getMessage(), "ERRO GRID", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    

    

    private void CarregaTabela_TextFileld() {
        
        RegistroPsicologo.setCd_Psicologo((int) tb_psicologo.getValueAt(tb_psicologo.getSelectedRow(),0));
        RegistroPsicologo.setNm_Psicologo((String) tb_psicologo.getValueAt(tb_psicologo.getSelectedRow(),1));
        RegistroPsicologo.setNr_CRPpsicologo((int) tb_psicologo.getValueAt(tb_psicologo.getSelectedRow(),2));
        RegistroPsicologo.setNr_DDDpsicologo((int) tb_psicologo.getValueAt(tb_psicologo.getSelectedRow(),3));
        RegistroPsicologo.setNm_FaculdadePsicologo(((String) tb_psicologo.getValueAt(tb_psicologo.getSelectedRow(),4)));
        RegistroPsicologo.setDt_DataNascimentoPsi((int) tb_psicologo.getValueAt(tb_psicologo.getSelectedRow(),5));
        RegistroPsicologo.setAbr_Sexo(((String) tb_psicologo.getValueAt(tb_psicologo.getSelectedRow(),6)));
        RegistroPsicologo.setDs_emailPsicologo(((String) tb_psicologo.getValueAt(tb_psicologo.getSelectedRow(),7)));
        RegistroPsicologo.setNr_Telefonepsicologo((int) tb_psicologo.getValueAt(tb_psicologo.getSelectedRow(),8));
        RegistroPsicologo.setNr_RGpsicologo((int) tb_psicologo.getValueAt(tb_psicologo.getSelectedRow(),9));
        RegistroPsicologo.setNr_CPFpsicologo((int) tb_psicologo.getValueAt(tb_psicologo.getSelectedRow(),10));
        
         
        
        
        
         
    }   

    
    public boolean isCamposValidos(){
        boolean saida=false;
        if ((RegistroPsicologo.isNm_Psicologo_Valida())&& (RegistroPsicologo.isNm_FaculdadePsicologo_Valida())&& (RegistroPsicologo.isDs_emailPsicologo_Valida())) {
            saida=true;
        }
        return saida;
    }
    
     
    private void CargaListaSexo() throws Exception {
 
      
        ListaSexo  = bd_sexo.CarregarListaSexo();
     
     
    }
    
      
    private void CargaComboBoxSexo () {
 
        Iterator<Objeto_Sexo> it = ListaSexo.iterator();
       
        while(it.hasNext()) {
           Objeto_Sexo  reg = it.next();
           String sexo = reg.getAbr_Sexo();
           
           cb_sexo.addItem(sexo);
        }
           
        cb_sexo.setSelectedIndex(-1); 
     
    }
}
